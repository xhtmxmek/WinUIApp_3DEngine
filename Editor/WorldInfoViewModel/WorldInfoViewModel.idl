
namespace Editor
{

	delegate void ValueChangedCallback();

	unsealed runtimeclass ObservableObject : Microsoft.UI.Xaml.Data.INotifyPropertyChanged
	{
	}

	unsealed runtimeclass ValueChangedCallbackObject : ObservableObject
	{
		event ValueChangedCallback ValueChanged;
	}

	runtimeclass ComponentInfo : ObservableObject
	{
		ComponentInfo(String name);

		void UpdateComponentDetail(String ownerActorName, String componentName, Microsoft.UI.Xaml.Controls.StackPanel detailPanel);

		String Name;
	}

	runtimeclass ActorLabel
	{
		ActorLabel(String name, String classType);
		String Name{ get; };
		String ClassName{ get; };
	}

	runtimeclass ActorDetail : ObservableObject
	{
		ActorDetail(String name);

		String Name;
		Microsoft.UI.Xaml.Visibility Visible;

		void UpdateActorDeail(String actorName, Microsoft.UI.Xaml.Controls.StackPanel detailPanel);
		void Clear(Microsoft.UI.Xaml.Controls.StackPanel detailPanel);
		Windows.Foundation.Collections.IObservableVector<ComponentInfo> ComponentInfos{ get; };
		ComponentInfo SelectedComponent{ get; };
		void UpdateSelectedComponent(String componentName, Microsoft.UI.Xaml.Controls.StackPanel detailPanel);
	}

	runtimeclass WorldInfoViewModel : ObservableObject
	{
		WorldInfoViewModel();

		Windows.Foundation.Collections.IObservableVector<ActorLabel> ActorLabels{ get; };

		ActorDetail SelectedActorDetail{ get; };
		void UpdateWorldInfoProxy();
		void UpdateSelectedActorDetail(String actorName, Microsoft.UI.Xaml.Controls.StackPanel detailPanel);
		void UpdateSelectedComponent(String componentName, Microsoft.UI.Xaml.Controls.StackPanel detailPanel);
		void ClearSelectedActor(Microsoft.UI.Xaml.Controls.StackPanel detailPanel);
		String OutlinerComment;
	}

}


