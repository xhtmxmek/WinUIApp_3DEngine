#pragma once
#include "EngineInterface.g.h"

// WARNING: This file is automatically generated by a tool. Do not directly
// add this file to your project, as any changes you make will be lost.
// This file is a stub you can use as a starting point for your implementation.
//
// To add a copy of this file to your project:
//   1. Copy this file from its original location to the location where you store 
//      your other source files (e.g. the project root). 
//   2. Add the copied file to your project. In Visual Studio, you can use 
//      Project -> Add Existing Item.
//   3. Delete this comment and the 'static_assert' (below) from the copied file.
//      Do not modify the original file.
//
// To update an existing file in your project:
//   1. Copy the relevant changes from this file and merge them into the copy 
//      you made previously.
//    
// This assertion helps prevent accidental modification of generated files.

namespace Engine
{
    class EngineCore;
}

namespace winrt::EngineInterface_WRC::implementation
{
    struct EngineInterface : EngineInterfaceT<EngineInterface>
    {
        EngineInterface();

        void Initialize(winrt::Microsoft::UI::Xaml::Controls::SwapChainPanel const& panel);
        void UnInitialize();        
        void StartRenderLoop();
        void StopRenderLoop();        
        void OnActivated();
        void OnDeactivated();
        void OnSuspending();
        void OnResuming();
        void OnWindowSizeChanged(Windows::Foundation::Size windowSize);
        void OnSwapchainXamlChanged(const Microsoft::UI::Xaml::Controls::SwapChainPanel& panel);
        void OnOrientationChanged(winrt::Windows::Graphics::Display::DisplayOrientations const& orientation); 

        void KeyboardProcess(winrt::Microsoft::UI::Xaml::Input::KeyRoutedEventArgs const& args);
        void StartTracking(winrt::Microsoft::UI::Input::PointerEventArgs const& args);
        void TrackingUpdate(winrt::Microsoft::UI::Input::PointerEventArgs const& args);
        winrt::EngineInterface_WRC::PointerActionResult StopTracking(winrt::Microsoft::UI::Input::PointerEventArgs const& args);
        void PointerWheelChanged(winrt::Microsoft::UI::Input::PointerEventArgs const& args);

        Windows::Foundation::Size GetDefaultBackBufferSize() noexcept;
        void LoadScriptProject(hstring const& path);        
    private: 
        void InitializeSwapChainPanelInfo(const Microsoft::UI::Xaml::Controls::SwapChainPanel& panel);
        void SetSwapchainPanelInfo(const Microsoft::UI::Xaml::Controls::SwapChainPanel& panel);        
        void SetRegisterSwapChainFunc(const Microsoft::UI::Xaml::Controls::SwapChainPanel& panel);
        void CheckButtonState(winrt::Microsoft::UI::Input::PointerEventArgs const& args, SharedTypes::PointerButton& button, bool pressed);
        
        std::unique_ptr<Engine::EngineCore> engineCoreNative_;

        Microsoft::UI::Xaml::Controls::SwapChainPanel SwapchainPanelUI;
        SwapchainPanelInfo SwapchainPanelInfo;
        IDXGISwapChain3* EngineSwapChain;

    };
}
namespace winrt::EngineInterface_WRC::factory_implementation
{
    struct EngineInterface : EngineInterfaceT<EngineInterface, implementation::EngineInterface>
    {
    };
}
